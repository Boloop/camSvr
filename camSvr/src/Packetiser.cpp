/*
 * Packetiser.cpp
 *
 *  Created on: 6 Apr 2011
 *      Author: two
 */

#include "Packetiser.h"

#ifndef MP4HEADERHACK_H_
#define MP4HEADERHACK_H_

char * MP4HEADERHACK =
"\x00\x00\x0C\x4E\x6D\x6F\x6F\x76\x00\x00\x00\x6C\x6D\x76\x68"
"\x64\x00\x00\x00\x00\x7C\x25\xB0\x80\x7C\x25\xB0\x80\x00\x00"
"\x03\xE8\x00\x10\xD1\x14\x00\x01\x00\x00\x01\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x0B\x79"
"\x74\x72\x61\x6B\x00\x00\x00\x5C\x74\x6B\x68\x64\x00\x00\x00"
"\x0F\x7C\x25\xB0\x80\x7C\x25\xB0\x80\x00\x00\x00\x01\x00\x00"
"\x00\x00\x00\x10\xD1\x14\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\xA0"
"\x00\x00\x00\x78\x00\x00\x00\x00\x0B\x15\x6D\x64\x69\x61\x00"
"\x00\x00\x20\x6D\x64\x68\x64\x00\x00\x00\x00\x7C\x25\xB0\x80"
"\x7C\x25\xB0\x80\x00\x00\x00\x1E\x00\x00\x81\x27\x55\xC4\x00"
"\x00\x00\x00\x00\x2D\x68\x64\x6C\x72\x00\x00\x00\x00\x00\x00"
"\x00\x00\x76\x69\x64\x65\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x0C\x56\x69\x64\x65\x6F\x48\x61\x6E\x64\x6C\x65"
"\x72\x00\x00\x0A\xC0\x6D\x69\x6E\x66\x00\x00\x00\x14\x76\x6D"
"\x68\x64\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x24\x64\x69\x6E\x66\x00\x00\x00\x1C\x64\x72\x65\x66"
"\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x0C\x75\x72\x6C"
"\x20\x00\x00\x00\x01\x00\x00\x0A\x80\x73\x74\x62\x6C\x00\x00"
"\x00\xB8\x73\x74\x73\x64\x00\x00\x00\x00\x00\x00\x00\x01\x00"
"\x00\x00\xA8\x6D\x70\x34\x76\x00\x00\x00\x00\x00\x00\x00\x01"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\xA0\x00\x78\x00\x48\x00\x00\x00\x48\x00\x00\x00\x00"
"\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x18\xFF\xFF\x00\x00\x00\x52\x65"
"\x73\x64\x73\x00\x00\x00\x00\x03\x44\x00\x01\x00\x04\x3C\x20"
"\x11\x00\x00\x00\x00\x01\xF4\x00\x00\x00\x00\x00\x05\x2D\x00"
"\x00\x01\xB0\x01\x00\x00\x01\xB5\x89\x13\x00\x00\x01\x00\x00"
"\x00\x01\x20\x00\xC4\x8D\x88\x00\xF5\x05\x04\x0F\x14\x63\x00"
"\x00\x01\xB2\x4C\x61\x76\x63\x35\x32\x2E\x32\x30\x2E\x31\x06"
"\x01\x02\x00\x00\x00\x58\x73\x74\x74\x73\x00\x00\x00\x00\x00"
"\x00\x00\x09\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x28"
"\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00"
"\x02\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00"
"\x00\x05\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x02\x00"
"\x00\x00\xF1\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x7F\xFF"
"\x00\x00\x00\x1C\x73\x74\x73\x63\x00\x00\x00\x00\x00\x00\x00"
"\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00\x00\x01\x00\x00"
"\x04\xA8\x73\x74\x73\x7A\x00\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x01\x25\x00\x00\x0F\xB9\x00\x00\x08\xAC\x00\x00\x07\x26"
"\x00\x00\x05\x2A\x00\x00\x04\x00\x00\x00\x04\x3B\x00\x00\x04"
"\xF8\x00\x00\x04\x00\x00\x00\x01\xDE\x00\x00\x06\x25\x00\x00"
"\x15\x94\x00\x00\x02\xEF\x00\x00\x02\xB2\x00\x00\x02\xEA\x00"
"\x00\x01\xB8\x00\x00\x02\x68\x00\x00\x02\x8E\x00\x00\x05\x67"
"\x00\x00\x03\xEA\x00\x00\x02\xD2\x00\x00\x0F\xD3\x00\x00\x04"
"\xC5\x00\x00\x04\x03\x00\x00\x04\xE0\x00\x00\x02\x22\x00\x00"
"\x02\xCE\x00\x00\x02\x9C\x00\x00\x03\xEC\x00\x00\x03\x33\x00"
"\x00\x03\x99\x00\x00\x0D\x78\x00\x00\x03\x7C\x00\x00\x03\x30"
"\x00\x00\x02\x24\x00\x00\x02\xCB\x00\x00\x02\xA1\x00\x00\x03"
"\x58\x00\x00\x05\xBE\x00\x00\x01\xC0\x00\x00\x05\x97\x00\x00"
"\x01\xD5\x00\x00\x02\xA8\x00\x00\x03\x2F\x00\x00\x01\x80\x00"
"\x00\x03\x1E\x00\x00\x03\x54\x00\x00\x02\x8C\x00\x00\x07\xCC"
"\x00\x00\x02\xCE\x00\x00\x02\x63\x00\x00\x02\x6A\x00\x00\x03"
"\x5D\x00\x00\x02\xFF\x00\x00\x01\xBC\x00\x00\x02\x7F\x00\x00"
"\x02\xA2\x00\x00\x03\xD0\x00\x00\x07\x61\x00\x00\x01\xC6\x00"
"\x00\x01\xBF\x00\x00\x03\x25\x00\x00\x02\x6D\x00\x00\x02\xA4"
"\x00\x00\x02\x80\x00\x00\x03\xFB\x00\x00\x02\x14\x00\x00\x01"
"\xD3\x00\x00\x08\xEE\x00\x00\x01\x67\x00\x00\x02\x86\x00\x00"
"\x02\x4E\x00\x00\x02\x41\x00\x00\x02\xB7\x00\x00\x02\x08\x00"
"\x00\x02\x56\x00\x00\x01\x9F\x00\x00\x03\x36\x00\x00\x09\xE8"
"\x00\x00\x02\x2E\x00\x00\x01\xF7\x00\x00\x01\xFD\x00\x00\x01"
"\xDC\x00\x00\x02\x35\x00\x00\x02\x55\x00\x00\x02\x5F\x00\x00"
"\x02\x7E\x00\x00\x01\x6F\x00\x00\x0B\x1D\x00\x00\x01\x89\x00"
"\x00\x02\x7D\x00\x00\x01\xBE\x00\x00\x01\xB7\x00\x00\x02\xE2"
"\x00\x00\x01\x87\x00\x00\x01\x9C\x00\x00\x02\xA5\x00\x00\x02"
"\x25\x00\x00\x09\x4F\x00\x00\x02\x7B\x00\x00\x02\x79\x00\x00"
"\x02\x2D\x00\x00\x01\xF2\x00\x00\x01\xB4\x00\x00\x02\x85\x00"
"\x00\x02\x96\x00\x00\x01\x92\x00\x00\x01\xBF\x00\x00\x09\xD5"
"\x00\x00\x02\x2C\x00\x00\x01\xDE\x00\x00\x02\xD3\x00\x00\x02"
"\x2D\x00\x00\x03\x02\x00\x00\x02\x4C\x00\x00\x02\x02\x00\x00"
"\x01\x82\x00\x00\x01\xD9\x00\x00\x0A\xE5\x00\x00\x01\x66\x00"
"\x00\x02\x6E\x00\x00\x02\x6B\x00\x00\x02\x05\x00\x00\x02\x01"
"\x00\x00\x02\x62\x00\x00\x02\x11\x00\x00\x02\x2B\x00\x00\x02"
"\x43\x00\x00\x09\x43\x00\x00\x02\x82\x00\x00\x02\x0D\x00\x00"
"\x01\x99\x00\x00\x02\x8C\x00\x00\x01\xEE\x00\x00\x02\x9C\x00"
"\x00\x02\x2F\x00\x00\x02\x7C\x00\x00\x01\xCF\x00\x00\x09\xD6"
"\x00\x00\x02\x29\x00\x00\x02\x30\x00\x00\x02\x4B\x00\x00\x02"
"\x34\x00\x00\x02\x51\x00\x00\x02\x27\x00\x00\x02\x74\x00\x00"
"\x02\x92\x00\x00\x02\x5D\x00\x00\x08\xE2\x00\x00\x02\x26\x00"
"\x00\x01\xDB\x00\x00\x01\xE5\x00\x00\x02\x28\x00\x00\x02\x38"
"\x00\x00\x01\x70\x00\x00\x02\xEB\x00\x00\x02\x16\x00\x00\x01"
"\x94\x00\x00\x08\xD1\x00\x00\x02\x27\x00\x00\x02\x4A\x00\x00"
"\x02\x05\x00\x00\x02\x3F\x00\x00\x02\x7B\x00\x00\x01\x98\x00"
"\x00\x02\x4D\x00\x00\x02\x48\x00\x00\x02\x56\x00\x00\x09\x11"
"\x00\x00\x01\x33\x00\x00\x01\xC8\x00\x00\x02\x08\x00\x00\x01"
"\xDF\x00\x00\x02\x45\x00\x00\x02\x8B\x00\x00\x01\xD2\x00\x00"
"\x01\xFB\x00\x00\x02\x3A\x00\x00\x08\xC0\x00\x00\x01\x9B\x00"
"\x00\x01\xBF\x00\x00\x01\xD9\x00\x00\x01\xD8\x00\x00\x03\xEA"
"\x00\x00\x01\xC9\x00\x00\x02\x3A\x00\x00\x01\xCC\x00\x00\x02"
"\x18\x00\x00\x06\xB1\x00\x00\x01\xA9\x00\x00\x02\x41\x00\x00"
"\x02\x18\x00\x00\x02\x86\x00\x00\x02\xAE\x00\x00\x01\xAE\x00"
"\x00\x02\x3B\x00\x00\x02\x07\x00\x00\x02\xBF\x00\x00\x05\x0B"
"\x00\x00\x02\x88\x00\x00\x01\xF9\x00\x00\x01\xC0\x00\x00\x03"
"\xB0\x00\x00\x01\xBC\x00\x00\x01\xE4\x00\x00\x02\x30\x00\x00"
"\x01\xEB\x00\x00\x01\xF6\x00\x00\x05\xA5\x00\x00\x03\x01\x00"
"\x00\x01\x96\x00\x00\x02\x2B\x00\x00\x02\x72\x00\x00\x02\x39"
"\x00\x00\x02\x47\x00\x00\x02\xA9\x00\x00\x01\xF2\x00\x00\x01"
"\xC2\x00\x00\x05\x14\x00\x00\x01\xB6\x00\x00\x02\xA6\x00\x00"
"\x02\x5D\x00\x00\x02\x6C\x00\x00\x02\x3A\x00\x00\x01\x9D\x00"
"\x00\x01\xF0\x00\x00\x02\x0D\x00\x00\x02\xCC\x00\x00\x06\x55"
"\x00\x00\x02\x75\x00\x00\x01\x81\x00\x00\x01\x83\x00\x00\x01"
"\x6D\x00\x00\x01\xE7\x00\x00\x02\xB5\x00\x00\x02\x69\x00\x00"
"\x02\x3E\x00\x00\x02\x08\x00\x00\x06\x8A\x00\x00\x02\x1D\x00"
"\x00\x01\x9D\x00\x00\x01\x9E\x00\x00\x01\xBC\x00\x00\x01\xDD"
"\x00\x00\x02\x68\x00\x00\x02\x6E\x00\x00\x01\xC1\x00\x00\x02"
"\x6B\x00\x00\x06\xF3\x00\x00\x01\x97\x00\x00\x02\x47\x00\x00"
"\x02\x27\x00\x00\x02\x30\x00\x00\x02\x1D\x00\x00\x01\x9D\x00"
"\x00\x02\x9A\x00\x00\x02\xE2\x00\x00\x01\xDD\x00\x00\x07\x3E"
"\x00\x00\x01\x03\x00\x00\x03\x1A\x00\x00\x01\xDB\x00\x00\x03"
"\xB0\x00\x00\x01\xB1\x00\x00\x03\x32\x00\x00\x03\x0B\x00\x00"
"\x02\x5B\x00\x00\x01\xA5\x00\x00\x09\x81\x00\x00\x01\xE0\x00"
"\x00\x02\x08\x00\x00\x02\x57\x00\x00\x01\xDC\x00\x00\x02\x4A"
"\x00\x00\x02\x0D\x00\x00\x02\x2C\x00\x00\x02\x03\x00\x00\x02"
"\x62\x00\x00\x09\x4A\x00\x00\x01\xDD\x00\x00\x02\x06\x00\x00"
"\x02\x9E\x00\x00\x01\xCE\x00\x00\x01\xB6\x00\x00\x02\x06\x00"
"\x00\x02\xC7\x00\x00\x01\xA5\x00\x00\x01\xC8\x00\x00\x09\x6B"
"\x00\x00\x01\xB6\x00\x00\x02\x04\x00\x00\x01\x33\x00\x00\x01"
"\xF6\x00\x00\x02\x81\x00\x00\x04\xA4\x73\x74\x63\x6F\x00\x00"
"\x00\x00\x00\x00\x01\x25\x00\x00\x00\x2C\x00\x00\x0F\xE5\x00"
"\x00\x18\x91\x00\x00\x1F\xB7\x00\x00\x24\xE1\x00\x00\x28\xE1"
"\x00\x00\x2D\x1C\x00\x00\x32\x14\x00\x00\x36\x14\x00\x00\x37"
"\xF2\x00\x00\x3E\x17\x00\x00\x53\xAB\x00\x00\x56\x9A\x00\x00"
"\x59\x4C\x00\x00\x5C\x36\x00\x00\x5D\xEE\x00\x00\x60\x56\x00"
"\x00\x62\xE4\x00\x00\x68\x4B\x00\x00\x6C\x35\x00\x00\x6F\x07"
"\x00\x00\x7E\xDA\x00\x00\x83\x9F\x00\x00\x87\xA2\x00\x00\x8C"
"\x82\x00\x00\x8E\xA4\x00\x00\x91\x72\x00\x00\x94\x0E\x00\x00"
"\x97\xFA\x00\x00\x9B\x2D\x00\x00\x9E\xC6\x00\x00\xAC\x3E\x00"
"\x00\xAF\xBA\x00\x00\xB2\xEA\x00\x00\xB5\x0E\x00\x00\xB7\xD9"
"\x00\x00\xBA\x7A\x00\x00\xBD\xD2\x00\x00\xC3\x90\x00\x00\xC5"
"\x50\x00\x00\xCA\xE7\x00\x00\xCC\xBC\x00\x00\xCF\x64\x00\x00"
"\xD2\x93\x00\x00\xD4\x13\x00\x00\xD7\x31\x00\x00\xDA\x85\x00"
"\x00\xDD\x11\x00\x00\xE4\xDD\x00\x00\xE7\xAB\x00\x00\xEA\x0E"
"\x00\x00\xEC\x78\x00\x00\xEF\xD5\x00\x00\xF2\xD4\x00\x00\xF4"
"\x90\x00\x00\xF7\x0F\x00\x00\xF9\xB1\x00\x00\xFD\x81\x00\x01"
"\x04\xE2\x00\x01\x06\xA8\x00\x01\x08\x67\x00\x01\x0B\x8C\x00"
"\x01\x0D\xF9\x00\x01\x10\x9D\x00\x01\x13\x1D\x00\x01\x17\x18"
"\x00\x01\x19\x2C\x00\x01\x1A\xFF\x00\x01\x23\xED\x00\x01\x25"
"\x54\x00\x01\x27\xDA\x00\x01\x2A\x28\x00\x01\x2C\x69\x00\x01"
"\x2F\x20\x00\x01\x31\x28\x00\x01\x33\x7E\x00\x01\x35\x1D\x00"
"\x01\x38\x53\x00\x01\x42\x3B\x00\x01\x44\x69\x00\x01\x46\x60"
"\x00\x01\x48\x5D\x00\x01\x4A\x39\x00\x01\x4C\x6E\x00\x01\x4E"
"\xC3\x00\x01\x51\x22\x00\x01\x53\xA0\x00\x01\x55\x0F\x00\x01"
"\x60\x2C\x00\x01\x61\xB5\x00\x01\x64\x32\x00\x01\x65\xF0\x00"
"\x01\x67\xA7\x00\x01\x6A\x89\x00\x01\x6C\x10\x00\x01\x6D\xAC"
"\x00\x01\x70\x51\x00\x01\x72\x76\x00\x01\x7B\xC5\x00\x01\x7E"
"\x40\x00\x01\x80\xB9\x00\x01\x82\xE6\x00\x01\x84\xD8\x00\x01"
"\x86\x8C\x00\x01\x89\x11\x00\x01\x8B\xA7\x00\x01\x8D\x39\x00"
"\x01\x8E\xF8\x00\x01\x98\xCD\x00\x01\x9A\xF9\x00\x01\x9C\xD7"
"\x00\x01\x9F\xAA\x00\x01\xA1\xD7\x00\x01\xA4\xD9\x00\x01\xA7"
"\x25\x00\x01\xA9\x27\x00\x01\xAA\xA9\x00\x01\xAC\x82\x00\x01"
"\xB7\x67\x00\x01\xB8\xCD\x00\x01\xBB\x3B\x00\x01\xBD\xA6\x00"
"\x01\xBF\xAB\x00\x01\xC1\xAC\x00\x01\xC4\x0E\x00\x01\xC6\x1F"
"\x00\x01\xC8\x4A\x00\x01\xCA\x8D\x00\x01\xD3\xD0\x00\x01\xD6"
"\x52\x00\x01\xD8\x5F\x00\x01\xD9\xF8\x00\x01\xDC\x84\x00\x01"
"\xDE\x72\x00\x01\xE1\x0E\x00\x01\xE3\x3D\x00\x01\xE5\xB9\x00"
"\x01\xE7\x88\x00\x01\xF1\x5E\x00\x01\xF3\x87\x00\x01\xF5\xB7"
"\x00\x01\xF8\x02\x00\x01\xFA\x36\x00\x01\xFC\x87\x00\x01\xFE"
"\xAE\x00\x02\x01\x22\x00\x02\x03\xB4\x00\x02\x06\x11\x00\x02"
"\x0E\xF3\x00\x02\x11\x19\x00\x02\x12\xF4\x00\x02\x14\xD9\x00"
"\x02\x17\x01\x00\x02\x19\x39\x00\x02\x1A\xA9\x00\x02\x1D\x94"
"\x00\x02\x1F\xAA\x00\x02\x21\x3E\x00\x02\x2A\x0F\x00\x02\x2C"
"\x36\x00\x02\x2E\x80\x00\x02\x30\x85\x00\x02\x32\xC4\x00\x02"
"\x35\x3F\x00\x02\x36\xD7\x00\x02\x39\x24\x00\x02\x3B\x6C\x00"
"\x02\x3D\xC2\x00\x02\x46\xD3\x00\x02\x48\x06\x00\x02\x49\xCE"
"\x00\x02\x4B\xD6\x00\x02\x4D\xB5\x00\x02\x4F\xFA\x00\x02\x52"
"\x85\x00\x02\x54\x57\x00\x02\x56\x52\x00\x02\x58\x8C\x00\x02"
"\x61\x4C\x00\x02\x62\xE7\x00\x02\x64\xA6\x00\x02\x66\x7F\x00"
"\x02\x68\x57\x00\x02\x6C\x41\x00\x02\x6E\x0A\x00\x02\x70\x44"
"\x00\x02\x72\x10\x00\x02\x74\x28\x00\x02\x7A\xD9\x00\x02\x7C"
"\x82\x00\x02\x7E\xC3\x00\x02\x80\xDB\x00\x02\x83\x61\x00\x02"
"\x86\x0F\x00\x02\x87\xBD\x00\x02\x89\xF8\x00\x02\x8B\xFF\x00"
"\x02\x8E\xBE\x00\x02\x93\xC9\x00\x02\x96\x51\x00\x02\x98\x4A"
"\x00\x02\x9A\x0A\x00\x02\x9D\xBA\x00\x02\x9F\x76\x00\x02\xA1"
"\x5A\x00\x02\xA3\x8A\x00\x02\xA5\x75\x00\x02\xA7\x6B\x00\x02"
"\xAD\x10\x00\x02\xB0\x11\x00\x02\xB1\xA7\x00\x02\xB3\xD2\x00"
"\x02\xB6\x44\x00\x02\xB8\x7D\x00\x02\xBA\xC4\x00\x02\xBD\x6D"
"\x00\x02\xBF\x5F\x00\x02\xC1\x21\x00\x02\xC6\x35\x00\x02\xC7"
"\xEB\x00\x02\xCA\x91\x00\x02\xCC\xEE\x00\x02\xCF\x5A\x00\x02"
"\xD1\x94\x00\x02\xD3\x31\x00\x02\xD5\x21\x00\x02\xD7\x2E\x00"
"\x02\xD9\xFA\x00\x02\xE0\x4F\x00\x02\xE2\xC4\x00\x02\xE4\x45"
"\x00\x02\xE5\xC8\x00\x02\xE7\x35\x00\x02\xE9\x1C\x00\x02\xEB"
"\xD1\x00\x02\xEE\x3A\x00\x02\xF0\x78\x00\x02\xF2\x80\x00\x02"
"\xF9\x0A\x00\x02\xFB\x27\x00\x02\xFC\xC4\x00\x02\xFE\x62\x00"
"\x03\x00\x1E\x00\x03\x01\xFB\x00\x03\x04\x63\x00\x03\x06\xD1"
"\x00\x03\x08\x92\x00\x03\x0A\xFD\x00\x03\x11\xF0\x00\x03\x13"
"\x87\x00\x03\x15\xCE\x00\x03\x17\xF5\x00\x03\x1A\x25\x00\x03"
"\x1C\x42\x00\x03\x1D\xDF\x00\x03\x20\x79\x00\x03\x23\x5B\x00"
"\x03\x25\x38\x00\x03\x2C\x76\x00\x03\x2D\x79\x00\x03\x30\x93"
"\x00\x03\x32\x6E\x00\x03\x36\x1E\x00\x03\x37\xCF\x00\x03\x3B"
"\x01\x00\x03\x3E\x0C\x00\x03\x40\x67\x00\x03\x42\x0C\x00\x03"
"\x4B\x8D\x00\x03\x4D\x6D\x00\x03\x4F\x75\x00\x03\x51\xCC\x00"
"\x03\x53\xA8\x00\x03\x55\xF2\x00\x03\x57\xFF\x00\x03\x5A\x2B"
"\x00\x03\x5C\x2E\x00\x03\x5E\x90\x00\x03\x67\xDA\x00\x03\x69"
"\xB7\x00\x03\x6B\xBD\x00\x03\x6E\x5B\x00\x03\x70\x29\x00\x03"
"\x71\xDF\x00\x03\x73\xE5\x00\x03\x76\xAC\x00\x03\x78\x51\x00"
"\x03\x7A\x19\x00\x03\x83\x84\x00\x03\x85\x3A\x00\x03\x87\x3E"
"\x00\x03\x88\x71\x00\x03\x8A\x67\x00\x00\x00\x61\x75\x64\x74"
"\x61\x00\x00\x00\x59\x6D\x65\x74\x61\x00\x00\x00\x00\x00\x00"
"\x00\x22\x68\x64\x6C\x72\x00\x00\x00\x00\x00\x00\x00\x00\x6D"
"\x64\x69\x72\x61\x70\x70\x6C\x00\x00\x00\x00\x00\x00\x00\x00"
"\x00\x00\x00\x00\x00\x2B\x69\x6C\x73\x74\x00\x00\x00\x23\xA9"
"\x74\x6F\x6F\x00\x00\x00\x1B\x64\x61\x74\x61\x00\x00\x00\x01"
"\x00\x00\x00\x00\x4C\x61\x76\x66\x35\x32\x2E\x33\x31\x2E\x30"
;
int MP4HEADERHACKSize = 3150;

#endif /* MP4HEADERHACK_H_ */




void timeDifCalc(struct timeval* start, struct timeval* stop, struct timedif* td)
{
	//printf("start %i : %7i\n stop %i : %7i\n", start->tv_sec, start->tv_usec, stop->tv_sec, stop->tv_usec);
	td->dsec = stop->tv_sec - start->tv_sec;
	td->dusec = stop->tv_usec - start->tv_usec;
	if(td->dusec < 0) // Shouldn't happen!
	{
		td->dusec = td->dusec+1000000;
	}
	if(td->dsec > 0 && stop->tv_usec < start->tv_usec ) // So not quite a second!
	{
		td->dsec = td->dsec - 1;
		td->dusec = 1000000 - start->tv_usec + stop->tv_usec;
	}
	//printf("Diff %i : %i \n", td->dsec, td->dusec);
}


Packetiser::Packetiser(char* type)
{
	// TODO Auto-generated constructor stub

	m_ByteIOCtx = NULL;
	m_ByteIOCtxURL = NULL;
	m_nLastPTS = -1;
	m_bMP4HeaderHack = false;

	if(type == NULL)
		m_sPacketiserName = "mpegts";
	else
		m_sPacketiserName = type;

	//av_guess_format on Laptop, guess_format on Deskop
	//Need to find out the libav revisions!
	#if LIBAVFORMAT_VERSION_MAJOR == 52 && LIBAVFORMAT_VERSION_MINOR == 31
		m_OutputFormat = guess_format(m_sPacketiserName, NULL, NULL);
	#else
		m_OutputFormat = av_guess_format(m_sPacketiserName, NULL, NULL);
	#endif

	m_FormatCtx = avformat_alloc_context();
	if(!m_OutputFormat){
		m_bFoundFormat = false;
		return;
	}else{
		m_bFoundFormat = true;
	}

	gettimeofday(&m_tvStartRefference, NULL);

	m_tvStartRefference.tv_sec -= 1;


}

int Packetiser::addVideoStream(AVCodecContext * codecCtx)
{
	/*
	 * this adds a Video stream, and spits out the index of it when allocated. (NOT ID)
	 */

	m_VideoStream = av_new_stream(m_FormatCtx, 0xE0); // MPEG2 Video stream number 1!
	m_VideoStream->codec = codecCtx;

	//m_timeBase.num = codecCtx->time_base.num;
	//m_timeBase.den = codecCtx->time_base.den;
	m_timeBase.num = m_FormatCtx->streams[m_VideoStream->index]->time_base.num;
	m_timeBase.den = m_FormatCtx->streams[m_VideoStream->index]->time_base.den;

	return m_VideoStream->index;


}

int Packetiser::initPacketiser()
{
	/*
	 * Once all the parameters and streams are added, this will start off all the functions that
	 * need to be done before being passed any packets to write.
	 */

	m_FormatCtx->oformat = m_OutputFormat;

	if ( av_set_parameters(m_FormatCtx, NULL) < 0 )
	{
		return -1;
	}

	 dump_format(m_FormatCtx, 0, "/tmp/fileOK", 1);

	 if (url_fopen(&m_ByteIOCtxURL, "/tmp/fileOKd", URL_WRONLY) < 0)
	 {
		 //Failed to open segmenter... :(
		 return -2;
	 }

	 //Silly hack! >.<
	 if (m_ByteIOCtx != NULL)
		 m_FormatCtx->pb = m_ByteIOCtx;

	 if (av_write_header(m_FormatCtx))
	 {
		 //Error! D: Could not write to the file?
		 return -3;
	 }

	 if (m_bMP4HeaderHack)
	 {
		 //
		 ioBufferContext * ioctx = (ioBufferContext*)m_ByteIOCtx->opaque;
		 int index = ioctx->writeIndex-1;
		 if(index < 0) index = ioctx->packetListSize;
		 //Modify the present packet and remove 0000mdat (8 bytes)

		 ioctx->packetLength[index] -= 8; // Assume it's bigger than 8, although Cry warning here!

		 ioBufferWriteFunc(ioctx, (uint8_t*)MP4HEADERHACK, MP4HEADERHACKSize);

		 char * mdatheader = "\xFF\xFF\xFF\xFFmdat";
		 ioBufferWriteFunc(ioctx, (uint8_t*)mdatheader, 8);

	 }

	 return 0;

}

int Packetiser::writeInPacket(AVPacket* pac)
{
	/*
	 * This will write in the packet, no pts/dts/stream id set here!
	 */

	if ( av_interleaved_write_frame(m_FormatCtx, pac) < 0 )
	{
		return -1; //Could not write the frames! D:
	}
	return 0;

}

const char* Packetiser::getName()
{
	/*
	 * Rofl
	 */
	return m_OutputFormat->name;
}

void Packetiser::setMP4HeaderHack(bool val)
{
	m_bMP4HeaderHack = val;
}

int Packetiser::setPacketStamps(AVPacket* pac, struct timeval* timeOfPacket)
{
	/*
	 * this will write to the values of Pac, streamindex, pts/dts depending on time fed in,
	 * and when time began.
	 * Don't forget to duplicate the packet! As the writeInPacket will dealloc the packet data
	 */


	m_timeBase.num = m_FormatCtx->streams[m_VideoStream->index]->time_base.num;
	m_timeBase.den = m_FormatCtx->streams[m_VideoStream->index]->time_base.den;

	struct timedif tdSecTS;
	double tickor, timeSec;
	pac->destruct = NULL;
	pac->stream_index = m_VideoStream->index;

	tickor = (double)m_timeBase.num / (double)m_timeBase.den;
	timeDifCalc(&m_tvStartRefference, timeOfPacket, &tdSecTS);
	timeSec = (double)tdSecTS.dsec + (double)tdSecTS.dusec*0.000001;

	pac->pts = (int64_t)( timeSec / tickor );
	if(pac->pts <= m_nLastPTS)
		pac->pts = m_nLastPTS+1;
	m_nLastPTS = pac->pts;
	//pac->dts = (int64_t)( (timeSec-0.1) / tickor );
	pac->dts = pac->pts;

	return 0;


}


void Packetiser::setByteIOContext(ByteIOContext* ioctx)
{
	m_ByteIOCtx = ioctx;
}

void Packetiser::setTimeBase(int num, int den)
{
	/*
	 * This is the timebase used to set the pts/dts of packets.
	 */

	m_timeBase.num = num;
	m_timeBase.den = den;
}

int Packetiser::addTrailer()
{
	//Closes the stream :( Adds a footer
	if(m_bMP4HeaderHack)
		return -40;
	return av_write_trailer(m_FormatCtx);

}

Packetiser::~Packetiser()
{
	// TODO Auto-generated destructor stub
}
